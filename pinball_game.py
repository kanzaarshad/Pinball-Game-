# -*- coding: utf-8 -*-
"""Pinball Game.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oA3fiDlwJQWkj2qsVkNlCZYpSG_ZTBuJ
"""

pip install pygame

import pygame
import sys
import random

# Initialize Pygame
pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Simple Pinball Game")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Ball properties
ball_radius = 15
ball_speed = [4, -4]
ball_pos = [WIDTH // 2, HEIGHT // 2]

# Paddle properties
paddle_width = 100
paddle_height = 10
paddle_speed = 10
paddle_pos = [WIDTH // 2 - paddle_width // 2, HEIGHT - 50]

# Clock to control the frame rate
clock = pygame.time.Clock()

def draw_ball(screen, pos):
    pygame.draw.circle(screen, RED, pos, ball_radius)

def draw_paddle(screen, pos):
    pygame.draw.rect(screen, WHITE, (*pos, paddle_width, paddle_height))

def move_ball(ball_pos, ball_speed):
    ball_pos[0] += ball_speed[0]
    ball_pos[1] += ball_speed[1]
    if ball_pos[0] <= ball_radius or ball_pos[0] >= WIDTH - ball_radius:
        ball_speed[0] = -ball_speed[0]
    if ball_pos[1] <= ball_radius:
        ball_speed[1] = -ball_speed[1]

def check_collision(ball_pos, paddle_pos):
    if (paddle_pos[1] < ball_pos[1] + ball_radius < paddle_pos[1] + paddle_height and
        paddle_pos[0] < ball_pos[0] < paddle_pos[0] + paddle_width):
        ball_speed[1] = -ball_speed[1]

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and paddle_pos[0] > 0:
        paddle_pos[0] -= paddle_speed
    if keys[pygame.K_RIGHT] and paddle_pos[0] < WIDTH - paddle_width:
        paddle_pos[0] += paddle_speed

    move_ball(ball_pos, ball_speed)
    check_collision(ball_pos, paddle_pos)

    if ball_pos[1] >= HEIGHT - ball_radius:
        running = False  # Game over

    screen.fill(BLACK)
    draw_ball(screen, ball_pos)
    draw_paddle(screen, paddle_pos)
    pygame.display.flip()

    clock.tick(60)

pygame.quit()
sys.exit()